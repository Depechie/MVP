<?xml version="1.0" encoding="UTF-8"?>
<ResourceDictionary xmlns="http://xamarin.com/schemas/2014/forms"
                    xmlns:controls="clr-namespace:MVP.Controls"
                    xmlns:converters="clr-namespace:MVP.Converters"
                    xmlns:data="clr-namespace:MVP.ViewModels.Data"
                    xmlns:effects="clr-namespace:Xamarin.CommunityToolkit.Effects;assembly=Xamarin.CommunityToolkit"
                    xmlns:ff="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
                    xmlns:fftransformations="clr-namespace:FFImageLoading.Transformations;assembly=FFImageLoading.Transformations"
                    xmlns:icons="clr-namespace:MVP.Styles"
                    xmlns:models="clr-namespace:MVP.Models"
                    xmlns:vm="clr-namespace:MVP.ViewModels"
                    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                    xmlns:xct="clr-namespace:Xamarin.CommunityToolkit.Converters;assembly=Xamarin.CommunityToolkit"
                    x:Class="MVP.Templates.DataTemplates">

    <xct:MultiConverter x:Key="ContributionTypeConverter">
        <converters:ContributionTypeToTypeColorConverter/>
        <converters:StringToColorResourceConverter/>
    </xct:MultiConverter>

    <xct:MultiConverter x:Key="ContributionTypeTextConverter">
        <converters:ContributionTypeToTextColorConverter/>
        <converters:StringToColorResourceConverter/>
    </xct:MultiConverter>

    <DataTemplate x:DataType="models:Contribution"
                  x:Key="contribution_item">
        <StackLayout>
            <StackLayout Padding="32,16"
                         Spacing="8"
                         VerticalOptions="Center"
                         effects:TouchEffect.Command="{Binding Source={RelativeSource AncestorType={x:Type vm:BaseViewModel}}, Path=OpenContributionCommand}"
                         effects:TouchEffect.CommandParameter="{Binding Source={RelativeSource Self}, Path=BindingContext}"
                         effects:TouchEffect.NormalBackgroundColor="{AppThemeBinding Light={StaticResource white}, Dark={StaticResource black}}"
                         effects:TouchEffect.PressedBackgroundColor="{AppThemeBinding Light={StaticResource white_highlight}, Dark={StaticResource black_highlight}}">
                <Frame BackgroundColor="{Binding ContributionType.Id, Converter={StaticResource ContributionTypeConverter}}"
                       Style="{StaticResource contribution_item_category}">

                    <Label HorizontalTextAlignment="End"
                           LineBreakMode="TailTruncation"
                           MaxLines="1"
                           Style="{StaticResource contribution_item_category_label}"
                           Text="{Binding ContributionType.EnglishName, Converter={xct:TextCaseConverter Type=Upper}}"
                           TextColor="{Binding ContributionType.Id, Converter={StaticResource ContributionTypeTextConverter}}"/>

                </Frame>
                <Label Style="{StaticResource contribution_item_title}"
                       Text="{Binding Title}"/>

                <Label Style="{StaticResource contribution_item_date}">
                    <Label.FormattedText>
                        <FormattedString>
                            <Span FontFamily="{StaticResource font_icon}"
                                  FontSize="{StaticResource fontsize_small}"
                                  Text="{x:Static icons:Icons.calendar}"/>
                            <Span Text="  "/>
                            <Span Text="{Binding StartDate, StringFormat='{0:D}'}"/>
                        </FormattedString>
                    </Label.FormattedText>
                </Label>
            </StackLayout>

            <BoxView Margin="16,0"
                     Style="{StaticResource separator}"/>
        </StackLayout>
    </DataTemplate>

    <DataTemplate x:Key="contribution_item_loading">
        <StackLayout>
            <Grid Padding="32,16"
                  RowSpacing="8"
                  VerticalOptions="Center">

                <controls:SkeletonView Grid.ColumnSpan="3"
                                       Grid.Row="0"
                                       HeightRequest="16"
                                       VerticalOptions="Center"/>

                <controls:SkeletonView Grid.ColumnSpan="5"
                                       Grid.Row="1"
                                       HeightRequest="24"
                                       VerticalOptions="Center"/>

                <controls:SkeletonView Grid.ColumnSpan="2"
                                       Grid.Row="2"
                                       HeightRequest="16"
                                       VerticalOptions="Center"/>
            </Grid>
            <BoxView Margin="16,0"
                     Style="{StaticResource separator}"/>
        </StackLayout>
    </DataTemplate>

    <DataTemplate x:Key="picker_item_loading">
        <StackLayout>
            <Grid Padding="32,16"
                  ColumnDefinitions="*,*,*,*,*,*"
                  VerticalOptions="Center">
                <controls:SkeletonView Grid.ColumnSpan="5"
                                       HeightRequest="24"
                                       VerticalOptions="Center"/>
            </Grid>
            <BoxView Margin="16,0"
                     Style="{StaticResource separator}"/>
            <Grid Padding="32,16"
                  ColumnDefinitions="*,*,*,*,*,*"
                  VerticalOptions="Center">
                <controls:SkeletonView Grid.ColumnSpan="3"
                                       HeightRequest="24"
                                       VerticalOptions="Center" />
            </Grid>
            <BoxView Margin="16,0"
                     Style="{StaticResource separator}"/>
            <Grid Padding="32,16"
                  ColumnDefinitions="*,*,*,*,*,*"
                  VerticalOptions="Center">
                <controls:SkeletonView Grid.ColumnSpan="4"
                                       HeightRequest="24"
                                       VerticalOptions="Center" />
            </Grid>
            <BoxView Margin="16,0"
                     Style="{StaticResource separator}"/>
        </StackLayout>
    </DataTemplate>

    <DataTemplate x:Key="app_theme_item">
        <StackLayout>
            <StackLayout Orientation="Horizontal"
                         Padding="32,0"
                         Spacing="8"
                         effects:TouchEffect.Command="{Binding Source={RelativeSource AncestorType={x:Type vm:BaseViewModel}}, Path=SetAppThemeCommand}"
                         effects:TouchEffect.CommandParameter="{Binding Source={RelativeSource Self}, Path=BindingContext}"
                         effects:TouchEffect.NormalBackgroundColor="{AppThemeBinding Light={StaticResource white}, Dark={StaticResource black}}"
                         effects:TouchEffect.PressedBackgroundColor="{AppThemeBinding Light={StaticResource white_highlight}, Dark={StaticResource black_highlight}}">
                <Label Padding="0,16"
                       Style="{StaticResource list_item_title_label}"
                       Text="{Binding Description}"/>
                <Label Style="{StaticResource selection_indicator}" 
                       HorizontalOptions="EndAndExpand"
                       IsVisible="{Binding IsSelected}"
                       Text="{x:Static icons:Icons.check}"/>
            </StackLayout>
            <BoxView Margin="16,0"
                     Style="{StaticResource separator}"/>
        </StackLayout>
    </DataTemplate>

    <DataTemplate x:Key="license_item">
        <StackLayout>
            <StackLayout Orientation="Horizontal"
                         Padding="32,0"
                         Spacing="8"
                         effects:TouchEffect.Command="{Binding Source={RelativeSource AncestorType={x:Type vm:BaseViewModel}}, Path=OpenLicenseCommand}"
                         effects:TouchEffect.CommandParameter="{Binding Source={RelativeSource Self}, Path=BindingContext}"
                         effects:TouchEffect.NormalBackgroundColor="{AppThemeBinding Light={StaticResource white}, Dark={StaticResource black}}"
                         effects:TouchEffect.PressedBackgroundColor="{AppThemeBinding Light={StaticResource white_highlight}, Dark={StaticResource black_highlight}}">
                <Label Padding="0,16"
                       Style="{StaticResource list_item_title_label}"
                       Text="{Binding Title}"/>
            </StackLayout>
            <BoxView Margin="16,0"
                     Style="{StaticResource separator}"/>
        </StackLayout>
    </DataTemplate>

    <DataTemplate x:DataType="data:AppIconViewModel"
                  x:Key="app_icon_item">
        <StackLayout>
            <StackLayout Orientation="Horizontal"
                         Padding="32,0"
                         Spacing="8"
                         effects:TouchEffect.Command="{Binding Source={RelativeSource AncestorType={x:Type vm:BaseViewModel}}, Path=SetAppIconCommand}"
                         effects:TouchEffect.CommandParameter="{Binding Source={RelativeSource Self}, Path=BindingContext}"
                         effects:TouchEffect.NormalBackgroundColor="{AppThemeBinding Light={StaticResource white}, Dark={StaticResource black}}"
                         effects:TouchEffect.PressedBackgroundColor="{AppThemeBinding Light={StaticResource white_highlight}, Dark={StaticResource black_highlight}}">
                <ff:CachedImage HeightRequest="48"
                                Margin="0,8,16,8"
                                Source="{Binding ImageUrl}"
                                VerticalOptions="Center"
                                WidthRequest="48">
                    <ff:CachedImage.Transformations>
                        <fftransformations:CornersTransformation CornersTransformType="AllRounded"/>
                    </ff:CachedImage.Transformations>
                </ff:CachedImage>
                <Label Padding="0,16"
                       Style="{StaticResource list_item_title_label}"
                       Text="{Binding Description}"/>
                <Label Style="{StaticResource selection_indicator}"
                       HorizontalOptions="EndAndExpand"
                       IsVisible="{Binding IsSelected}"
                       Text="{x:Static icons:Icons.check}"/>
            </StackLayout>
            <BoxView Margin="16,0"
                     Style="{StaticResource separator}"/>
        </StackLayout>
    </DataTemplate>

    <DataTemplate x:Key="app_language_item">
        <StackLayout>
            <StackLayout Orientation="Horizontal"
                         Padding="32,0"
                         Spacing="8"
                         effects:TouchEffect.Command="{Binding Source={RelativeSource AncestorType={x:Type vm:BaseViewModel}}, Path=SetAppLanguageCommand}"
                         effects:TouchEffect.CommandParameter="{Binding Source={RelativeSource Self}, Path=BindingContext}"
                         effects:TouchEffect.NormalBackgroundColor="{AppThemeBinding Light={StaticResource white}, Dark={StaticResource black}}"
                         effects:TouchEffect.PressedBackgroundColor="{AppThemeBinding Light={StaticResource white_highlight}, Dark={StaticResource black_highlight}}">
                <StackLayout Padding="0,16"
                             Spacing="4">
                    <Label Style="{StaticResource list_item_title_label}"
                           Text="{Binding Description}"/>
                    <Label Style="{StaticResource list_item_subtitle_label}"
                           Text="{Binding CurrentLanguageDescription}"/>
                </StackLayout>
                <Label Style="{StaticResource selection_indicator}"
                       HorizontalOptions="EndAndExpand"
                       IsVisible="{Binding IsSelected}"
                       Text="{x:Static icons:Icons.check}"/>
            </StackLayout>
            <BoxView Margin="16,0"
                     Style="{StaticResource separator}"/>
        </StackLayout>
    </DataTemplate>

    <DataTemplate x:DataType="vm:VisibilityViewModel"
                  x:Key="visibility_item">
        <StackLayout>
            <StackLayout Orientation="Horizontal"
                         Padding="32,0"
                         Spacing="8"
                         effects:TouchEffect.Command="{Binding Source={RelativeSource AncestorType={x:Type vm:BaseViewModel}}, Path=SelectVisibilityCommand}"
                         effects:TouchEffect.CommandParameter="{Binding Source={RelativeSource Self}, Path=BindingContext}"
                         effects:TouchEffect.NormalBackgroundColor="{AppThemeBinding Light={StaticResource white}, Dark={StaticResource black}}"
                         effects:TouchEffect.PressedBackgroundColor="{AppThemeBinding Light={StaticResource white_highlight}, Dark={StaticResource black_highlight}}">
                <Label Padding="0,16"
                       Style="{StaticResource list_item_title_label}"
                       Text="{Binding Visibility.Description}"/>
                <Label Style="{StaticResource selection_indicator}"
                       HorizontalOptions="EndAndExpand"
                       IsVisible="{Binding IsSelected}"
                       Text="{x:Static icons:Icons.check}"/>
            </StackLayout>
            <BoxView Margin="16,0"
                     Style="{StaticResource separator}"/>
        </StackLayout>
    </DataTemplate>

    <DataTemplate x:DataType="vm:ContributionTypeViewModel"
                  x:Key="contribution_type_item">
        <StackLayout>
            <StackLayout Orientation="Horizontal"
                         Padding="32,0"
                         Spacing="8"
                         effects:TouchEffect.Command="{Binding Source={RelativeSource AncestorType={x:Type vm:BaseViewModel}}, Path=SelectContributionTypeCommand}"
                         effects:TouchEffect.CommandParameter="{Binding Source={RelativeSource Self}, Path=BindingContext}"
                         effects:TouchEffect.NormalBackgroundColor="{AppThemeBinding Light={StaticResource white}, Dark={StaticResource black}}"
                         effects:TouchEffect.PressedBackgroundColor="{AppThemeBinding Light={StaticResource white_highlight}, Dark={StaticResource black_highlight}}">
                <Label Padding="0,16"
                       Style="{StaticResource list_item_title_label}"
                       Text="{Binding ContributionType.Name}"/>
                <Label Style="{StaticResource selection_indicator}"
                       HorizontalOptions="EndAndExpand"
                       IsVisible="{Binding IsSelected}"
                       Text="{x:Static icons:Icons.check}"/>
            </StackLayout>
            <BoxView Margin="16,0"
                     Style="{StaticResource separator}"/>
        </StackLayout>
    </DataTemplate>

    <DataTemplate x:DataType="vm:ContributionTechnologyViewModel"
                  x:Key="contribution_technology_item">
        <StackLayout>
            <StackLayout Orientation="Horizontal"
                         Padding="32,0"
                         Spacing="8"
                         effects:TouchEffect.Command="{Binding Source={RelativeSource AncestorType={x:Type vm:BaseViewModel}}, Path=SelectContributionTechnologyCommand}"
                         effects:TouchEffect.CommandParameter="{Binding Source={RelativeSource Self}, Path=BindingContext}"
                         effects:TouchEffect.NormalBackgroundColor="{AppThemeBinding Light={StaticResource white}, Dark={StaticResource black}}"
                         effects:TouchEffect.PressedBackgroundColor="{AppThemeBinding Light={StaticResource white_highlight}, Dark={StaticResource black_highlight}}">
                <Label Padding="0,16"
                       Style="{StaticResource list_item_title_label}"
                       Text="{Binding ContributionTechnology.Name}"/>
                <Label Style="{StaticResource selection_indicator}"
                       HorizontalOptions="EndAndExpand"
                       IsVisible="{Binding IsSelected}"
                       Text="{x:Static icons:Icons.check}"/>
            </StackLayout>
            <BoxView Margin="16,0"
                     Style="{StaticResource separator}"/>
        </StackLayout>
    </DataTemplate>

    <DataTemplate x:Key="contribution_technology_group">
        <Grid Padding="24,24,24,16">
            <Label FontFamily="{StaticResource font_bold}"
                   FontSize="{StaticResource fontsize_h3}"
                   LineBreakMode="TailTruncation"
                   Text="{Binding Key}"/>
        </Grid>
    </DataTemplate>
</ResourceDictionary>