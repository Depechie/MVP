<?xml version="1.0" encoding="UTF-8"?>
<StackLayout xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:xct="clr-namespace:Xamarin.CommunityToolkit.Converters;assembly=Xamarin.CommunityToolkit"
             xmlns:effects="clr-namespace:Xamarin.CommunityToolkit.Effects;assembly=Xamarin.CommunityToolkit"
             x:Class="MVP.Controls.PickerInputView"
             x:Name="inputView"
             xmlns:icons="clr-namespace:MVP.Styles"
             effects:TouchEffect.PressedBackgroundColor="{AppThemeBinding Light={StaticResource light_blue}, Dark={StaticResource background_dark_gray_highlight}}"
             effects:TouchEffect.NormalBackgroundColor="{AppThemeBinding Light={StaticResource white}, Dark={StaticResource black}}"
             effects:TouchEffect.Command="{Binding PickerCommand, Source={x:Reference inputView}}">

    <Grid Padding="32,16"
          ColumnDefinitions="*, Auto"
          RowDefinitions="Auto, Auto"
          ColumnSpacing="24"
          RowSpacing="4">

        <StackLayout Orientation="Horizontal" Spacing="4">
            <Label Style="{StaticResource field_title}" Text="{Binding Title, Source={x:Reference inputView}}" />
            <Label Text="*" FontSize="18" TextColor="{StaticResource error}">
                <Label.IsVisible>
                    <MultiBinding Converter="{xct:VariableMultiValueConverter ConditionType=All}">
                        <Binding Path="IsRequired" Source="{x:Reference inputView}" />
                        <Binding Path="IsEnabled" Source="{x:Reference inputView}" />
                    </MultiBinding>
                </Label.IsVisible>
            </Label>
        </StackLayout>

        <Label Style="{StaticResource input_picker_label}"
               Grid.Row="1"
               IsVisible="{Binding Value, Source={x:Reference inputView}, Converter={xct:IsNotNullOrEmptyConverter}}"
               Text="{Binding Value, Source={x:Reference inputView}}" />

        <Label Grid.Row="1"
               TextColor="{StaticResource gray}"
               IsVisible="{Binding Value, Source={x:Reference inputView}, Converter={xct:IsNullOrEmptyConverter}}"
               Text="{Binding Placeholder, Source={x:Reference inputView}}">
            <Label.Triggers>
                <DataTrigger TargetType="Label"
                             Binding="{Binding IsValid, Source={x:Reference inputView}}"
                             Value="False">
                    <Setter Property="TextColor"
                            Value="{StaticResource error}" />
                </DataTrigger>
            </Label.Triggers>
        </Label>

        <Label Style="{StaticResource chevron}" 
               Grid.Column="1"
               Grid.RowSpan="2"
               IsVisible="{Binding IsEnabled, Source={x:Reference inputView}}"
               Text="{x:Static icons:Icons.chevron_right}" />
    </Grid>
</StackLayout>
