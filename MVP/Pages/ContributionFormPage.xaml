<?xml version="1.0" encoding="UTF-8"?>
<pages:BaseContentPage xmlns="http://xamarin.com/schemas/2014/forms"
                       xmlns:controls="clr-namespace:MVP.Controls"
                       xmlns:converters="clr-namespace:Xamarin.CommunityToolkit.Converters;assembly=Xamarin.CommunityToolkit"
                       xmlns:local="clr-namespace:MVP"
                       xmlns:lottie="clr-namespace:Lottie.Forms;assembly=Lottie.Forms"
                       xmlns:pages="clr-namespace:MVP.Pages"
                       xmlns:state="clr-namespace:Xamarin.CommunityToolkit.UI.Views;assembly=Xamarin.CommunityToolkit"
                       xmlns:vm="clr-namespace:MVP.ViewModels"
                       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                       xmlns:xct="clr-namespace:Xamarin.CommunityToolkit.Extensions;assembly=Xamarin.CommunityToolkit"
                       xmlns:effects="clr-namespace:Xamarin.CommunityToolkit.Effects;assembly=Xamarin.CommunityToolkit"
                       x:Class="MVP.Pages.ContributionFormPage"
                       x:DataType="vm:ContributionFormViewModel"
                       x:TypeArguments="vm:ContributionFormViewModel">

    <local:AppFrame IsModal="True"
                    SecondaryButtonText="{xct:Translate contributionform_save}"
                    ShadowOpacity="1"
                    ShowBackButton="{Binding State, Converter={converters:NotEqualConverter}, ConverterParameter={x:Static state:LayoutState.Saving}}"
                    ShowSecondaryButton="{Binding State, Converter={converters:NotEqualConverter}, ConverterParameter={x:Static state:LayoutState.Saving}}"
                    x:Name="appFrame">

        <local:AppFrame.Triggers>
            <DataTrigger Binding="{Binding IsEditing}"
                         TargetType="local:AppFrame"
                         Value="False">
                <Setter Property="Title"
                        Value="{xct:Translate contributionform_title_add}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsEditing}"
                         TargetType="local:AppFrame"
                         Value="True">
                <Setter Property="Title"
                        Value="{xct:Translate contributionform_title_edit}"/>
            </DataTrigger>
        </local:AppFrame.Triggers>
        <local:AppFrame.Content>
            <Grid state:StateLayout.CurrentState="{Binding State}"
                  state:StateLayout.AnimateStateChanges="False"
                  VerticalOptions="CenterAndExpand">

                <ScrollView>
                    <StackLayout Padding="0,32">
                        <Label Style="{StaticResource contributionform_note}" 
                               Padding="32,0"
                               Text="{Binding ContributionDeadlineText}"
                               x:Name="lbl"/>

                        <BoxView Margin="16,16,16,0"
                                 Style="{StaticResource separator}"/>

                        <controls:PickerInputView Errors="{Binding Contribution.ContributionType.Errors, Converter={converters:ListToStringConverter}}"
                                                  IsEnabled="{Binding IsEditing, Converter={converters:InvertedBoolConverter}}"
                                                  IsRequired="True"
                                                  IsValid="{Binding Contribution.ContributionType.IsValid}"
                                                  PickerCommand="{Binding PickContributionTypeCommand}"
                                                  Placeholder="{xct:Translate contributionform_activitytype_placeholder}"
                                                  Title="{xct:Translate field_activity_type}"
                                                  Value="{Binding Contribution.ContributionType.Value}"/>

                        <BoxView Margin="16,0"
                                 Style="{StaticResource separator}"/>

                        <controls:PickerInputView Errors="{Binding Contribution.ContributionTechnology.Errors, Converter={converters:ListToStringConverter}}"
                                                  IsRequired="True"
                                                  IsValid="{Binding Contribution.ContributionTechnology.IsValid}"
                                                  PickerCommand="{Binding PickContributionTechnologyCommand}"
                                                  Placeholder="{xct:Translate contributionform_technologyarea_placeholder}"
                                                  Title="{xct:Translate field_primary_contribution_area}"
                                                  Value="{Binding Contribution.ContributionTechnology.Value}"/>
                        <BoxView Margin="16,0"
                                 Style="{StaticResource separator}"/>

                        <controls:PickerInputView PickerCommand="{Binding PickAdditionalTechnologiesCommand}"
                                                  Placeholder="{xct:Translate contributionform_additionaltechnologyarea_placeholder}"
                                                  Title="{xct:Translate field_additional_contribution_areas}"
                                                  Value="{Binding Contribution.AdditionalTechnologies, Converter={converters:ListToStringConverter Separator=','}}"/>
                        <BoxView Margin="16,0"
                                 Style="{StaticResource separator}"/>

                        <controls:DateInputView IsRequired="True"
                                                MinimumDate="{Binding CurrentAwardPeriodStartDate}"
                                                Title="{xct:Translate field_activity_date}"
                                                Value="{Binding Contribution.StartDate}"/>
                        <BoxView Margin="16,16,16,0"
                                 Style="{StaticResource separator}"/>

                        <controls:InputView Errors="{Binding Contribution.Title.Errors, Converter={converters:ListToStringConverter}}"
                                            IsRequired="True"
                                            IsValid="{Binding Contribution.Title.IsValid}"
                                            Title="{xct:Translate field_title}"
                                            Value="{Binding Contribution.Title.Value}"/>
                        <BoxView Margin="16,16,16,0"
                                 Style="{StaticResource separator}"/>

                        <controls:InputView Errors="{Binding Contribution.ReferenceUrl.Errors, Converter={converters:ListToStringConverter}}"
                                            IsRequired="{Binding Contribution.Requirements.IsUrlRequired}"
                                            IsValid="{Binding Contribution.ReferenceUrl.IsValid}"
                                            Keyboard="Url"
                                            Title="{xct:Translate field_url}"
                                            Value="{Binding Contribution.ReferenceUrl.Value}"/>

                        <controls:UrlPreviewView Url="{Binding Contribution.ReferenceUrl.Value}" />

                        <BoxView Margin="16,0,16,0"
                                 Style="{StaticResource separator}"/>

                        <controls:InputView IsMultiLine="True"
                                            Title="{xct:Translate field_description}"
                                            Value="{Binding Contribution.Description}"/>
                        <BoxView Margin="16,16,16,0"
                                 Style="{StaticResource separator}"/>

                        <controls:PickerInputView IsRequired="True"
                                                  IsValid="{Binding Contribution.Visibility.IsValid}"
                                                  PickerCommand="{Binding PickVisibilityCommand}"
                                                  Placeholder="{xct:Translate contributionform_visibility_placeholder}"
                                                  Title="{xct:Translate field_visibility}"
                                                  Value="{Binding Contribution.Visibility.Value}"/>

                        <StackLayout IsVisible="{Binding Contribution.ContributionType.Value, Converter={converters:IsNotNullOrEmptyConverter}}">
                            <BoxView Margin="16,0"
                                     Style="{StaticResource separator}"/>

                            <controls:InputView Errors="{Binding Contribution.AnnualQuantity.Errors, Converter={converters:ListToStringConverter}}"
                                                IsRequired="{Binding Contribution.Requirements.IsAnnualQuantityRequired}"
                                                IsValid="{Binding Contribution.AnnualQuantity.IsValid}"
                                                IsVisible="{Binding Contribution.Requirements.HasAnnualQuantity}"
                                                Keyboard="Numeric"
                                                Title="{Binding Contribution.Requirements.AnnualQuantityHeader}"
                                                Value="{Binding Contribution.AnnualQuantity.Value}"/>
                            <BoxView IsVisible="{Binding Contribution.Requirements.HasSecondAnnualQuantity}"
                                     Margin="16,16,16,0"
                                     Style="{StaticResource separator}"/>

                            <controls:InputView Errors="{Binding Contribution.SecondAnnualQuantity.Errors, Converter={converters:ListToStringConverter}}"
                                                IsRequired="{Binding Contribution.Requirements.IsSecondAnnualQuantityRequired}"
                                                IsValid="{Binding Contribution.SecondAnnualQuantity.IsValid}"
                                                IsVisible="{Binding Contribution.Requirements.HasSecondAnnualQuantity}"
                                                Keyboard="Numeric"
                                                Title="{Binding Contribution.Requirements.SecondAnnualQuantityHeader}"
                                                Value="{Binding Contribution.SecondAnnualQuantity.Value}"/>
                            <BoxView IsVisible="{Binding Contribution.Requirements.HasAnnualReach}"
                                     Margin="16,16,16,0"
                                     Style="{StaticResource separator}"/>

                            <controls:InputView Errors="{Binding Contribution.AnnualReach.Errors, Converter={converters:ListToStringConverter}}"
                                                IsRequired="{Binding Contribution.Requirements.IsAnnualReachRequired}"
                                                IsValid="{Binding Contribution.AnnualReach.IsValid}"
                                                IsVisible="{Binding Contribution.Requirements.HasAnnualReach}"
                                                Keyboard="Numeric"
                                                Title="{Binding Contribution.Requirements.AnnualReachHeader}"
                                                Value="{Binding Contribution.AnnualReach.Value}"/>
                        </StackLayout>
                    </StackLayout>
                </ScrollView>


                <state:StateLayout.StateViews>
                    <state:StateView StateKey="Loading">
                        <Grid VerticalOptions="CenterAndExpand"
                              Padding="0,0,0,80">
                            <lottie:AnimationView Animation="{AppThemeBinding Light='resource://loading.json?assembly=MVP', Dark='resource://loading_light.json?assembly=MVP'}"
                                                  AnimationSource="EmbeddedResource"
                                                  AutoPlay="True"
                                                  HeightRequest="240"
                                                  HorizontalOptions="Fill"
                                                  RepeatMode="Infinite"
                                                  VerticalOptions="Center" />
                            <Label HorizontalOptions="Center"
                                   HorizontalTextAlignment="Center"
                                   Margin="0,48,0,0"
                                   Text="{xct:Translate progress_loading_url_data}"
                                   VerticalOptions="Center"/>
                        </Grid>
                    </state:StateView>
                    <state:StateView StateKey="Saving">
                        <Grid BackgroundColor="{AppThemeBinding Light={StaticResource white}, Dark={StaticResource black}}"
                              Padding="0,0,0,80">
                            <lottie:AnimationView Animation="{AppThemeBinding Light='resource://loading.json?assembly=MVP', Dark='resource://loading_light.json?assembly=MVP'}"
                                                  AnimationSource="EmbeddedResource"
                                                  AutoPlay="True"
                                                  HeightRequest="240"
                                                  HorizontalOptions="Fill"
                                                  RepeatMode="Infinite"
                                                  VerticalOptions="Center" />
                            <Label HorizontalOptions="Center"
                                   HorizontalTextAlignment="Center"
                                   Margin="0,48,0,0"
                                   Text="{xct:Translate progress_saving}"
                                   VerticalOptions="Center"/>
                        </Grid>
                    </state:StateView>
                </state:StateLayout.StateViews>
            </Grid>
        </local:AppFrame.Content>
    </local:AppFrame>
</pages:BaseContentPage>
